plan : 

get amazon page full source 

get csrf token from span element id="nav-global-location-data-modal-action" which contains csrf token needed to get model html 

send request to get modal html, it contains a CSRF token needed to make request to change zip code 

make request to change zipcode 

get amazon page again with same cookie and session 

-----

todo: 

also get the offers page, done 
parse product and offers pages, done 
test with different zip codes and compare results of each ZIP code, done 
turn into clear class, done 
make two requets to offers page, one with all products adn other with prime eligible filter, done 
consolidate all data, done 
fix parsing to be as in requirements, done 
create api endpoint that receives asin and list of zipcode and returns the final data json, done 
add check to see if zipcode was actually changed succefully on page, done 
add proxy usage, done 
work concurrently on multiple zipcodes, done 
deploy on VM, done 
load zipcodes from file, and test with full zipcodes list, done 




reach 25 seconds: 
- remove going to product page, immidiately get offers page, done (from 30 seconds to 20 seconds)
- instead of doing the full process for each zipcode. allow each AmazonScraper instance to browse thourgh multiple zipcodes, done (20 to 17 seconds)
- remove sleep delays between zipcodes, done (17 to 12 seconds), done 
- don't start all concurrent tassks at once, but incrementally, done 
- udpate config for best result (incremental scale up control, batch size), done 
-pre-initialize pool of ready to use amazon sessions, where we just have to change proxy and go to product page, done 
- manage cached sessions:  increase pool size to always have sessions ready to use, done 
- add readme : setup project, done 


implement bigquery, enable in config 




feedback 
----
fix price extraction, comma not seperated correctly, done 

fix prime detection not working for B0054WTPBY (prime detection wasn't working) , done

for B0054WTPBY, delivery estimate is  Feb 10 (5 days from 5 feb), but earliest_days says '4' 

count prime delivery time in the estimate 

test full list. fixing prime detection might have made it slower 
----
